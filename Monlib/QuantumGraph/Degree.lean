import Monlib.LinearAlgebra.QuantumSet.PhiMap
import Monlib.QuantumGraph.Basic
import Mathlib.LinearAlgebra.TensorProduct.Opposite
import Monlib.QuantumGraph.Example

open scoped InnerProductSpace ComplexOrder

theorem QuantumSet.innerOne_map_one_toSubset_eq
  {A B : Type*} [starAlgebra A] [starAlgebra B] [QuantumSet A] [QuantumSet B]
  (r‚ÇÅ r‚ÇÇ : ‚Ñù) {f : A ‚Üí‚Çó[‚ÑÇ] B} :
  letI := QuantumSet.instSubset (A := B) (by infer_instance) r‚ÇÇ
  ‚ü™1, f 1‚ü´_‚ÑÇ = ‚ü™1, (f.toSubsetQuantumSet r‚ÇÅ r‚ÇÇ) 1‚ü´_‚ÑÇ :=
by
  simp
  rw [‚Üê AlgEquiv.toLinearMap_apply]
  letI := QuantumSet.instSubset (A := B) (by infer_instance) r‚ÇÇ
  nth_rw 2 [‚Üê LinearMap.adjoint_inner_left]
  rw [toSubset_algEquiv_adjoint, LinearMap.comp_apply]
  simp only [AlgEquiv.toLinearMap_apply, map_one]

theorem schurProjection.innerOne_map_one_nonneg_of_gns
  {A B : Type*} [starAlgebra A] [starAlgebra B] [QuantumSet A]
  [QuantumSet B]
  [PartialOrder A] [PartialOrder B] [StarOrderedRing A] [StarOrderedRing B] (gns : k A = 0)
  (h‚ÇÅ : ‚àÄ ‚¶Éa : A‚¶Ñ, 0 ‚â§ a ‚Üî ‚àÉ (b : A), a = star b * b)
  (h‚ÇÇ : ‚àÄ ‚¶Éa : B‚¶Ñ, 0 ‚â§ a ‚Üî ‚àÉ (b : B), a = star b * b)
  {f : A ‚Üí‚Çó[‚ÑÇ] B}
  (h : schurProjection f) :
    0 ‚â§ ‚ü™1, f 1‚ü´_‚ÑÇ :=
by
  have iPM := schurProjection.isPosMap gns h‚ÇÅ h
  obtain ‚ü®x, hx‚ü© := h‚ÇÇ.mp (@iPM 1 zero_le_one)
  rw [hx, ‚Üê inner_conj_symm, QuantumSet.inner_star_left, star_star, mul_one,
    inner_conj_symm, ‚Üê add_halves (-k B), ‚Üê QuantumSet.modAut_apply_modAut,
    ‚Üê AlgEquiv.toLinearMap_apply, ‚Üê LinearMap.adjoint_inner_right,
    QuantumSet.modAut_adjoint, AlgEquiv.toLinearMap_apply]
  exact inner_self_nonneg'


instance {A : Type*} [hA : PartialOrder A] (r : ‚Ñù) :
    PartialOrder (QuantumSet.subset r A) :=
hA
instance {A : Type*} [hA : NonUnitalNonAssocSemiring A] (r : ‚Ñù) :
  NonUnitalNonAssocSemiring (QuantumSet.subset r A) :=
hA
instance {A : Type*} [hA : NonUnitalSemiring A] (r : ‚Ñù) :
  NonUnitalSemiring (QuantumSet.subset r A) :=
hA
instance {A : Type*} [NonUnitalNonAssocSemiring A] [hA : StarRing A] (r : ‚Ñù) :
  StarRing (QuantumSet.subset r A) :=
hA
instance {A : Type*} [NonUnitalSemiring A] [PartialOrder A] [StarRing A] [hA : StarOrderedRing A] (r : ‚Ñù) :
  StarOrderedRing (QuantumSet.subset r A) :=
hA
instance {A : Type*} [hA : Nontrivial A] (r : ‚Ñù) :
  Nontrivial (QuantumSet.subset r A) :=
hA

theorem QuantumGraph.real_iff {A : Type*} [starAlgebra A] [QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A} :
  QuantumGraph.Real A f ‚Üî f ‚Ä¢‚Çõ f = f ‚àß LinearMap.IsReal f :=
‚ü®Œª h => ‚ü®h.1, h.2‚ü©, Œª h => ‚ü®h.1, h.2‚ü©‚ü©

theorem quantumGraph_iff {A : Type*} [starAlgebra A] [QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A} :
  QuantumGraph A f ‚Üî f ‚Ä¢‚Çõ f = f :=
‚ü®Œª ‚ü®h‚ü© => h, Œª h => ‚ü®h‚ü©‚ü©

theorem QuantumGraph.toSubset_iff {A : Type*} [starAlgebra A] [h : QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A} (r : ‚Ñù) :
  letI := QuantumSet.instSubset (A := A) h r
  QuantumGraph (QuantumSet.subset r A)
  (LinearMap.toSubsetQuantumSet f r r) ‚Üî QuantumGraph A f :=
by
  simp only [quantumGraph_iff, schurMul_toSubsetQuantumSet, LinearMap.toSubsetQuantumSet_inj]

theorem QuantumGraph.real_toSubset_iff {A : Type*} [starAlgebra A] [h : QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A} (r : ‚Ñù) :
  letI := QuantumSet.instSubset (A := A) h r
  QuantumGraph.Real (QuantumSet.subset r A)
  (LinearMap.toSubsetQuantumSet f r r) ‚Üî QuantumGraph.Real A f :=
by
  simp only [real_iff, LinearMap.toSubsetQuantumSet_isReal_iff,
    schurMul_toSubsetQuantumSet, LinearMap.toSubsetQuantumSet_inj]

theorem QuantumGraph.Real.innerOne_map_one_nonneg
  {A : Type*} [starAlgebra A] [hA : QuantumSet A]
  [PartialOrder A] [StarOrderedRing A]
  (h‚ÇÅ : ‚àÄ ‚¶Éa : A‚¶Ñ, 0 ‚â§ a ‚Üî ‚àÉ (b : A), a = star b * b) {f : A ‚Üí‚Çó[‚ÑÇ] A}
  (h : QuantumGraph.Real A f) :
    0 ‚â§ ‚ü™1, f 1‚ü´_‚ÑÇ :=
by
  rw [QuantumSet.innerOne_map_one_toSubset_eq 0 0]
  letI := hA.instSubset 0
  apply schurProjection.innerOne_map_one_nonneg_of_gns rfl
  exact h‚ÇÅ; exact h‚ÇÅ
  simp_rw [‚Üê quantumGraphReal_iff_schurProjection]
  exact (real_toSubset_iff 0).mpr h

open scoped TensorProduct

attribute [local instance] starAlgebra.mulOpposite
attribute [local instance] InnerProductAlgebra.mulOpposite
attribute [local instance] QuantumSet.mulOpposite
attribute [local instance] MulOpposite.starRing

theorem QuantumGraph.Real.innerOne_map_one_eq_zero_iff_of_kms
  {A : Type*} [starAlgebra A] [QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A}
  (h : QuantumGraph.Real A f) [kms : Fact (k A = - (1 / 2))] :
    ‚ü™1, f 1‚ü´_‚ÑÇ = 0 ‚Üî f = 0 :=
by
  rw [oneInner_map_one_eq_oneInner_Psi_map _ 0 (k A + (1/2)),
    ‚Üê (quantumGraphReal_iff_Psi_isIdempotentElem_and_isSelfAdjoint.mp h).1]
  nth_rw 1 [‚Üê (quantumGraphReal_iff_Psi_isIdempotentElem_and_isSelfAdjoint.mp h).2]
  simp_rw [Coalgebra.inner_eq_counit']
  rw [QuantumSet.counit_isFaithful, map_eq_zero_iff _ (LinearEquiv.injective _)]

theorem QuantumGraph.Real.innerOne_map_one_eq_zero_iff
  {A : Type*} [starAlgebra A] [QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A} (h : QuantumGraph.Real A f) :
    ‚ü™1, f 1‚ü´_‚ÑÇ = 0 ‚Üî f = 0 :=
by
  letI := QuantumSet.instSubset (A := A) (by infer_instance) (-(1 / 2))
  have kms : Fact (k (QuantumSet.subset (-(1/2)) A) = -(1/2)) := Fact.mk rfl
  let f' := LinearMap.toSubsetQuantumSet f (-(1/2)) (-(1/2))
  rw [QuantumSet.innerOne_map_one_toSubset_eq (- (1/2)) (- (1/2)),
    QuantumGraph.Real.innerOne_map_one_eq_zero_iff_of_kms
      ((QuantumGraph.real_toSubset_iff (-(1/2))).mpr h) (kms := kms)]
  rfl

theorem QuantumGraph.real_iff_complement'_real
  {A : Type*} [starAlgebra A] [QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A} :
  QuantumGraph.Real A f ‚Üî QuantumGraph.Real A (Qam.complement' f) :=
by
  simp only [real_iff, ‚Üê Qam.Nontracial.Complement'.qam, ‚Üê Qam.Nontracial.Complement'.qam.isReal]

set_option maxHeartbeats 250000 in
theorem QuantumGraph.Real.innerOne_map_one_eq_norm_pow_four_iff_of_kms
  {A : Type*} [starAlgebra A] [QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A}
  (h : QuantumGraph.Real A f) [kms : Fact (k A = - (1 / 2))] :
    ‚ü™1, f 1‚ü´_‚ÑÇ = ‚Äñ(1 : A)‚Äñ ^ 4 ‚Üî f = rankOne ‚ÑÇ (1 : A) (1 : A) :=
by
  have : ‚Äñ(1 : A)‚Äñ ^ 4 = ‚ü™(1 : A ‚äó[‚ÑÇ] A·µê·µí·µñ), 1‚ü´_‚ÑÇ :=
  by
    simp only [Algebra.TensorProduct.one_def, TensorProduct.inner_tmul, inner_self_eq_norm_sq_to_K,
      ‚Üê mul_pow, MulOpposite.norm_eq, MulOpposite.unop_one, ‚Üê sq, ‚Üê pow_mul]
    rfl
  rw [oneInner_map_one_eq_oneInner_Psi_map _ 0 (k A + (1/2))]
  rw [this]
  nth_rw 3 [‚Üê QuantumSet.Psi_apply_one_one 0 (k A + ( 1 / 2))]
  rw [eq_comm, ‚Üê sub_eq_zero, ‚Üê inner_sub_right (ùïú := ‚ÑÇ) (E := A ‚äó[‚ÑÇ] A·µê·µí·µñ), ‚Üê map_sub,
    ‚Üê Qam.completeGraph_eq, ‚Üê Qam.complement'_eq]
  have := QuantumGraph.real_iff_complement'_real.mp h
  rw [‚Üê (quantumGraphReal_iff_Psi_isIdempotentElem_and_isSelfAdjoint.mp this).1]
  nth_rw 1 [‚Üê (quantumGraphReal_iff_Psi_isIdempotentElem_and_isSelfAdjoint.mp this).2]
  simp_rw [Coalgebra.inner_eq_counit']
  rw [QuantumSet.counit_isFaithful, map_eq_zero_iff _ (LinearEquiv.injective _),
    Qam.complement'_eq, sub_eq_zero, eq_comm]

theorem QuantumSet.normOne_toSubset {A : Type*} [starAlgebra A] [QuantumSet A] (r : ‚Ñù) :
  letI := QuantumSet.instSubset (A := A) (by infer_instance) r
  ‚Äñ(1 : A)‚Äñ = ‚Äñ(1 : QuantumSet.subset r A)‚Äñ :=
by
  letI := QuantumSet.instSubset (A := A) (by infer_instance) r
  simp_rw [norm_eq_sqrt_inner (ùïú := ‚ÑÇ), QuantumSet.subset_inner_eq,
    ‚Üê QuantumSet.toSubset_algEquiv_symm_eq_toSubset_equiv, map_one]

theorem LinearMap.toSubsetQuantumSet_eq_iff {A B : Type*}  [ha : starAlgebra A]
  [starAlgebra B] [hA : QuantumSet A] [hB : QuantumSet B] (sk‚ÇÅ : ‚Ñù) (sk‚ÇÇ : ‚Ñù)
  (f : A ‚Üí‚Çó[‚ÑÇ] B) (g : QuantumSet.subset sk‚ÇÅ A ‚Üí‚Çó[‚ÑÇ] QuantumSet.subset sk‚ÇÇ B) :
  f.toSubsetQuantumSet sk‚ÇÅ sk‚ÇÇ = g ‚Üî f = g.ofSubsetQuantumSet sk‚ÇÅ sk‚ÇÇ :=
by rfl

theorem QuantumGraph.Real.innerOne_map_one_eq_norm_pow_four_iff
  {A : Type*} [starAlgebra A] [QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A} (h : QuantumGraph.Real A f) :
    ‚ü™1, f 1‚ü´_‚ÑÇ = ‚Äñ(1 : A)‚Äñ ^ 4 ‚Üî f = rankOne ‚ÑÇ (1 : A) (1 : A) :=
by
  letI := QuantumSet.instSubset (A := A) (by infer_instance) (-(1 / 2))
  have kms : Fact (k (QuantumSet.subset (-(1/2)) A) = -(1/2)) := Fact.mk rfl
  let f' := LinearMap.toSubsetQuantumSet f (-(1/2)) (-(1/2))
  rw [QuantumSet.innerOne_map_one_toSubset_eq (- (1/2)) (- (1/2)), QuantumSet.normOne_toSubset]
  rw [QuantumGraph.Real.innerOne_map_one_eq_norm_pow_four_iff_of_kms
      ((QuantumGraph.real_toSubset_iff (-(1/2))).mpr h) (kms := kms)]
  rw [LinearMap.toSubsetQuantumSet_eq_iff, rankOne_ofSubsetQuantumSet]
  simp_rw [‚Üê QuantumSet.toSubset_algEquiv_symm_eq_toSubset_equiv, map_one]

def QuantumGraph.IsRegular
  {A : Type*} [starAlgebra A] [QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A}
  (_h : QuantumGraph A f) (d : ‚ÑÇ) : Prop :=
f 1 = d ‚Ä¢ 1 ‚àß LinearMap.adjoint f 1 = d ‚Ä¢ 1

lemma QuantumGraph.degree_is_real_of_real
  {A : Type*} [starAlgebra A] [QuantumSet A] [Nontrivial A] {f : A ‚Üí‚Çó[‚ÑÇ] A}
  (h : QuantumGraph.Real A f) (d : ‚ÑÇ)
  (h2 : (h.toQuantumGraph).IsRegular d) :
    d = Complex.re d :=
by
  have := calc d ‚Ä¢ (1 : A) = f 1 := h2.1.symm
    _ = f.real 1 := by rw [LinearMap.real_of_isReal h.isReal]
    _ = star (f 1) := by rw [LinearMap.real_apply, star_one]
    _ = star d ‚Ä¢ (1 : A) := by rw [h2.1, star_smul, star_one]
  rw [‚Üê sub_eq_zero, ‚Üê sub_smul, smul_eq_zero] at this
  simp_rw [one_ne_zero, or_false, sub_eq_zero] at this
  exact (Complex.conj_eq_iff_re.mp this.symm).symm

open scoped TensorProduct
lemma PhiMap_apply_one_one
  {A B : Type*} [starAlgebra B] [starAlgebra A] [QuantumSet A] [QuantumSet B] :
  (PhiMap (rankOne ‚ÑÇ (1 : B) (1 : A))).1 = (1 : A ‚äó[‚ÑÇ] B ‚Üí‚Çó[‚ÑÇ] _) :=
by
  simp_rw [PhiMap_apply, Upsilon_apply_one_one]
  exact rmulMapLmul_one

open scoped InnerProductSpace

lemma ContinuousLinearMap.isPositive_iff_complex' {E' : Type*} [NormedAddCommGroup E'] [InnerProductSpace ‚ÑÇ E']
  [CompleteSpace E'] (T : E' ‚ÜíL[‚ÑÇ] E') :
  T.IsPositive ‚Üî ‚àÄ (x : E'), 0 ‚â§ ‚ü™T x, x‚ü´_‚ÑÇ :=
by simp [isPositive_iff_complex, RCLike.nonneg_def' (ùïú := ‚ÑÇ)]
lemma ContinuousLinearMap.isPositive_iff_complex'' {E' : Type*} [NormedAddCommGroup E'] [InnerProductSpace ‚ÑÇ E']
  [CompleteSpace E'] (T : E' ‚ÜíL[‚ÑÇ] E') :
  T.IsPositive ‚Üî ‚àÄ (x : E'), 0 ‚â§ ‚ü™x, T x‚ü´_‚ÑÇ :=
by
  simp_rw [isPositive_iff_complex', ‚Üê inner_conj_symm (T _),
    Complex.nonneg_iff, Complex.conj_re, Complex.conj_im, zero_eq_neg, eq_comm]

lemma ContinuousLinearMap.le_iff_complex_inner_le {E : Type*} [NormedAddCommGroup E]
  [InnerProductSpace ‚ÑÇ E] [CompleteSpace E] {p q : E ‚ÜíL[‚ÑÇ] E} :
  p ‚â§ q ‚Üî ‚àÄ (x : E), ‚ü™x, p x‚ü´_‚ÑÇ ‚â§ ‚ü™x, q x‚ü´_‚ÑÇ :=
by
  rw [ContinuousLinearMap.le_def, isPositive_iff_complex'']
  simp only [sub_apply, inner_sub_right, sub_nonneg]

theorem isOrthogonalProjection_iff_exists {E : Type*} [NormedAddCommGroup E]
  [InnerProductSpace ‚ÑÇ E] [FiniteDimensional ‚ÑÇ E] {p : E ‚ÜíL[‚ÑÇ] E} :
  p.IsOrthogonalProjection ‚Üî (‚àÉ U, orthogonalProjection' U = p) :=
by
  rw [ContinuousLinearMap.isOrthogonalProjection_iff', and_comm, ‚Üê orthogonal_projection_iff]

theorem orthogonalProjection'_le_one {E : Type*} [NormedAddCommGroup E] [InnerProductSpace ‚ÑÇ E]
  [CompleteSpace E] [CompleteSpace (‚ä§ : Submodule ‚ÑÇ E)]
  (U : Submodule ‚ÑÇ E) [CompleteSpace U] :
  orthogonalProjection' U ‚â§ 1 :=
by
  rw [‚Üê orthogonalProjection_of_top, orthogonalProjection.is_le_iff_subset]
  exact fun _ _ ‚Ü¶ trivial

theorem isOrthogonalProjection_le_one {E : Type*} [NormedAddCommGroup E]
  [InnerProductSpace ‚ÑÇ E] [FiniteDimensional ‚ÑÇ E] {p : E ‚ÜíL[‚ÑÇ] E} (hp : p.IsOrthogonalProjection) :
    p ‚â§ 1 :=
by
  obtain ‚ü®U, rfl‚ü© := isOrthogonalProjection_iff_exists.mp hp
  exact orthogonalProjection'_le_one U

lemma QuantumGraph.Real.gns_le_one
  {A : Type*} [starAlgebra A] [QuantumSet A] {f : A ‚Üí‚Çó[‚ÑÇ] A}
  (hf : QuantumGraph.Real A f) (gns : k A = 0) :
    LinearMap.toContinuousLinearMap (PhiMap f).1 ‚â§ 1 :=
isOrthogonalProjection_le_one
  ((quantumGraphReal_iff_Upsilon_toBimodule_orthogonalProjection gns).mp hf)

theorem QuantumGraph.Real.innerOne_map_one_le_norm_one_pow_four_of_gns
  {A : Type*} [starAlgebra A] [QuantumSet A] [Nontrivial A]
  [PartialOrder A] [StarOrderedRing A]
  (gns : k A = 0)
  (h‚ÇÅ : ‚àÄ ‚¶Éa : A‚¶Ñ, 0 ‚â§ a ‚Üî ‚àÉ (b : A), a = star b * b)
  {f : A ‚Üí‚Çó[‚ÑÇ] A}
  (h : QuantumGraph.Real A f) :
    ‚ü™1, f 1‚ü´_‚ÑÇ ‚â§ ‚Äñ(1 : A)‚Äñ ^ 4 :=
by
  have sP : schurProjection f := ‚ü®h.isIdempotentElem, h.isReal‚ü©
  have iPM := schurProjection.isPosMap gns h‚ÇÅ sP
  calc ‚ü™1, f 1‚ü´_‚ÑÇ = Complex.re ‚ü™1, f 1‚ü´_‚ÑÇ :=
      QuantumSet.innerOne_map_one_isReal_ofReal h.isReal
    _ = Complex.re ‚ü™1, (PhiMap f).1 1‚ü´_‚ÑÇ := by rw [‚Üê oneInner_map_one_eq_oneInner_PhiMap_map_one]
    _ = (RCLike.re ‚ü™1, LinearMap.toContinuousLinearMap (PhiMap f).1 1‚ü´_‚ÑÇ) := rfl
    _ ‚â§ RCLike.re ‚ü™(1 : A ‚äó[‚ÑÇ] A), (1 : (A ‚äó[‚ÑÇ] A) ‚ÜíL[‚ÑÇ] (A ‚äó[‚ÑÇ] A)) 1‚ü´_‚ÑÇ :=
        by
          rw [Complex.real_le_real]
          exact
            ((RCLike.le_def.mp ((ContinuousLinearMap.le_iff_complex_inner_le
                (p := LinearMap.toContinuousLinearMap (PhiMap f).1)
                (q := 1)).mp
              (QuantumGraph.Real.gns_le_one h gns) 1)).1)
    _ = (‚Äñ(1 : A)‚Äñ ^ 2) ^ 2 :=
      by
        rw [ContinuousLinearMap.one_apply, inner_self_eq_norm_sq (ùïú := ‚ÑÇ) (E := A ‚äó[‚ÑÇ] A),
          Algebra.TensorProduct.one_def, norm_tmul, ‚Üê pow_two]
        simp
    _ = ‚Äñ(1 : A)‚Äñ ^ 4 := by simp only [‚Üê pow_mul]

lemma QuantumGraph.zero_le_degree_le_norm_one_sq_of_gns
  {A : Type*} [starAlgebra A] [QuantumSet A] [Nontrivial A]
  [PartialOrder A] [StarOrderedRing A]
  (h‚ÇÅ : ‚àÄ ‚¶Éa : A‚¶Ñ, 0 ‚â§ a ‚Üî ‚àÉ (b : A), a = star b * b) (gns : k A = 0)
  {f : A ‚Üí‚Çó[‚ÑÇ] A} (h : QuantumGraph.Real A f) (d : ‚ÑÇ) (h2 : (h.toQuantumGraph).IsRegular d) :
    0 ‚â§ d ‚àß d ‚â§ ‚Äñ(1 : A)‚Äñ ^ 2 :=
by
  have sP : schurProjection f := ‚ü®h.isIdempotentElem, h.isReal‚ü©
  have iPM := schurProjection.isPosMap gns h‚ÇÅ sP
  have hd : d = ‚ü™1, f 1‚ü´_‚ÑÇ / ‚ü™1, (1 : A)‚ü´_‚ÑÇ :=
    by
      rw [h2.1, inner_smul_right, mul_div_assoc, div_self, mul_one]
      norm_num
  rw [hd]
  refine ‚ü®mul_nonneg (QuantumGraph.Real.innerOne_map_one_nonneg h‚ÇÅ h) ?_, ?_‚ü©
  . simp only [inner_self_eq_norm_sq_to_K]
    simp only [Complex.coe_algebraMap, ‚Üê Complex.ofReal_pow, ‚Üê Complex.ofReal_inv,
      Complex.zero_le_real, inv_nonneg, pow_two_nonneg]
  rw [‚Üê ge_iff_le, ‚Üê Complex.ofReal_pow]
  calc ((‚Äñ(1 : A)‚Äñ ^ 2 : ‚Ñù) : ‚ÑÇ) = ((‚Äñ(1 : A)‚Äñ ^ 2) ^ 2 / ‚Äñ(1 : A)‚Äñ ^ 2 : ‚Ñù) :=
      by
        rw [pow_two, pow_two, mul_div_assoc, div_self, mul_one]
        norm_num
    _ = ((‚Äñ(1 : A)‚Äñ ^ 4 / ‚Äñ(1 : A)‚Äñ ^ 2 : ‚Ñù) : ‚ÑÇ) := by simp [‚Üê pow_mul]
    _ ‚â• (‚ü™1, f 1‚ü´_‚ÑÇ / (‚Äñ(1 : A)‚Äñ ^ 2 : ‚Ñù) : ‚ÑÇ) :=
      by
        rw [QuantumSet.innerOne_map_one_isReal_ofReal h.isReal]
        rw [‚Üê Complex.ofReal_div, ge_iff_le, Complex.real_le_real]
        apply div_le_div_of_nonneg_right ?_ (sq_nonneg _)
        . simp [‚Üê Complex.real_le_real, ‚Üê QuantumSet.innerOne_map_one_isReal_ofReal h.isReal]
          exact Real.innerOne_map_one_le_norm_one_pow_four_of_gns gns h‚ÇÅ h
  simp [inner_self_eq_norm_sq_to_K]

theorem StarOrderedRing.nonneg_iff_toQuantumSetSubset
  {A : Type*} [NonUnitalSemiring A] [StarRing A]
  [PartialOrder A] [StarOrderedRing A] (r : ‚Ñù) :
  (‚àÄ ‚¶Éa : A‚¶Ñ, 0 ‚â§ a ‚Üî ‚àÉ (b : A), a = star b * b) ‚Üî
    ‚àÄ ‚¶Éa : QuantumSet.subset r A‚¶Ñ, 0 ‚â§ a ‚Üî ‚àÉ (b : QuantumSet.subset r A), a = star b * b :=
Iff.rfl

set_option maxHeartbeats 650000 in
set_option synthInstance.maxHeartbeats 30000 in
theorem Coalgebra.comul_comp_mul_quantumSetSubset
  {A : Type*} [starAlgebra A] [QuantumSet A] (r : ‚Ñù) :
  letI := QuantumSet.instSubset (A := A) (by infer_instance) r;
  Coalgebra.comul ‚àò‚Çó LinearMap.mul' ‚ÑÇ (QuantumSet.subset r A)
    = (TensorProduct.map (QuantumSet.toSubset_algEquiv r).toLinearMap
        (QuantumSet.toSubset_algEquiv r).toLinearMap)
      ‚àò‚Çó (Coalgebra.comul (R := ‚ÑÇ) (A := A)
      ‚àò‚Çó (LinearMap.mul' ‚ÑÇ A))
      ‚àò‚Çó (TensorProduct.map (QuantumSet.toSubset_algEquiv r).symm.toLinearMap
          (QuantumSet.toSubset_algEquiv r).symm.toLinearMap) :=
by
  letI := QuantumSet.instSubset (A := A) (by infer_instance) r
  letI : Fact (k A = k A) := Fact.mk rfl
  letI hh := QuantumSet.tensorProduct (A := A) (B := A) (h := Fact.mk rfl)
  letI := QuantumSet.instSubset (A := A ‚äó[‚ÑÇ] A) (by infer_instance) r
  have : Coalgebra.comul ‚àò‚Çó LinearMap.mul' ‚ÑÇ (QuantumSet.subset r A)
    = (TensorProduct.map (QuantumSet.toSubset_algEquiv r).toLinearMap
          (QuantumSet.toSubset_algEquiv r).toLinearMap)
      ‚àò‚Çó (Coalgebra.comul (R := ‚ÑÇ) (A := A))
      ‚àò‚Çó ((QuantumSet.toSubset_algEquiv r).symm.toLinearMap
      ‚àò‚Çó (QuantumSet.toSubset_algEquiv r).toLinearMap)
      ‚àò‚Çó (LinearMap.mul' ‚ÑÇ A)
      ‚àò‚Çó (TensorProduct.map (QuantumSet.toSubset_algEquiv r).symm.toLinearMap
          (QuantumSet.toSubset_algEquiv r).symm.toLinearMap) :=
  by
    rw [LinearMap.mul'_quantumSet_subset_eq]
    simp only [‚Üê LinearMap.comp_assoc]
    congr 4
    exact QuantumSet.comul_subset_eq _
  simpa only [LinearMap.comp_assoc, AlgEquiv.symm_comp_toLinearMap, LinearMap.comp_id]


theorem QuantumGraph.toSubset_isRegular_iff
  {A : Type*} [starAlgebra A] [QuantumSet A]
  {f : A ‚Üí‚Çó[‚ÑÇ] A} (r : ‚Ñù) (h : QuantumGraph A f) (d : ‚ÑÇ) :
  let h' := (QuantumGraph.toSubset_iff r).mpr h;
  letI := QuantumSet.instSubset (A := A) (by infer_instance) r;
    h.IsRegular d ‚Üî h'.IsRegular d :=
by
  intro h'
  simp only [QuantumGraph.IsRegular, LinearMap.toSubsetQuantumSet_apply]
  rw [LinearMap.toSubsetQuantumSet_adjoint_apply]
  simp only [LinearMap.comp_apply, ‚Üê QuantumSet.toSubset_algEquiv_symm_eq_toSubset_equiv,
    ‚Üê QuantumSet.toSubset_algEquiv_eq_toSubset_equiv, map_one, AlgEquiv.toLinearMap_apply]
  nth_rw 3 [eq_comm]
  nth_rw 4 [eq_comm]
  simp_rw [‚Üê AlgEquiv.symm_apply_eq, map_smul, map_one]
  nth_rw 1 [eq_comm]
  nth_rw 2 [eq_comm]

set_option maxHeartbeats 550000 in
lemma QuantumGraph.zero_le_degree_le_norm_one_sq
  {A : Type*} [starAlgebra A] [QuantumSet A] [Nontrivial A]
  [PartialOrder A] [StarOrderedRing A]
  (h‚ÇÅ : ‚àÄ ‚¶Éa : A‚¶Ñ, 0 ‚â§ a ‚Üî ‚àÉ (b : A), a = star b * b)
  {f : A ‚Üí‚Çó[‚ÑÇ] A} (h : QuantumGraph.Real A f) (d : ‚ÑÇ) (h2 : (h.toQuantumGraph).IsRegular d) :
    0 ‚â§ d ‚àß d ‚â§ ‚Äñ(1 : A)‚Äñ ^ 2 :=
by
  letI := QuantumSet.instSubset (A := A) (by infer_instance) 0
  rw [QuantumSet.normOne_toSubset 0]
  exact QuantumGraph.zero_le_degree_le_norm_one_sq_of_gns
    ((StarOrderedRing.nonneg_iff_toQuantumSetSubset 0).mp h‚ÇÅ) rfl
    ((QuantumGraph.real_toSubset_iff 0).mpr h) _
    ((QuantumGraph.toSubset_isRegular_iff 0 h.toQuantumGraph d).mp h2)
